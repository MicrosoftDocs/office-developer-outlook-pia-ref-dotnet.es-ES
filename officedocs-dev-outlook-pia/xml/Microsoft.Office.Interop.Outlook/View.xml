<Type Name="View" FullName="Microsoft.Office.Interop.Outlook.View">
  <Metadata><Meta Name="ms.openlocfilehash" Value="87b0e2f941bfdd33517182275daf75a85449684a" /><Meta Name="ms.sourcegitcommit" Value="372abf58b21f4fab503d106f0e8c8a2ac45f9332" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="01/12/2019" /><Meta Name="ms.locfileid" Value="27903170" /></Metadata><TypeSignature Language="C#" Value="public interface View" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract View" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Outlook.View" />
  <TypeSignature Language="VB.NET" Value="Public Interface View" />
  <TypeSignature Language="C++ CLI" Value="public interface class View" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("00063095-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4160)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="40526-101">Representa una vista personalizable utilizada para ordenar, agrupar y ver datos.</span><span class="sxs-lookup"><span data-stu-id="40526-101">Represents a customizable view used to sort, group, and view data.</span></span></summary>
    <remarks><para><span data-ttu-id="40526-p101">El objeto <b>View</b> permite crear vistas personalizables que permiten ordenar, agrupar y finalmente ver mejor datos de todo tipo. Existen diversos tipos de vistas diferentes que proporcionan la flexibilidad necesaria para crear y mantener los datos importantes.</span><span class="sxs-lookup"><span data-stu-id="40526-p101">The <b>View</b> object allows you to create customizable views that allow you to better sort, group and ultimately view data of all different types. There are a variety of different view types that provide the flexibility needed to create and maintain your important data.</span></span></para>
      <list type="bullet">
        <item>
          <para><span data-ttu-id="40526-p102">El tipo de vista de tabla (olTableView) permite ver los datos de una tabla sencilla basada en campos.
</span><span class="sxs-lookup"><span data-stu-id="40526-p102">The table view type (olTableView) allows you to view data in a simple field-based table. </span></span></para>
        </item>
        <item>
          <para> <span data-ttu-id="40526-p103">
				El tipo de vista Calendario (olCalendarView) permite ver los datos en formato de calendario.
</span><span class="sxs-lookup"><span data-stu-id="40526-p103">The Calendar view type (olCalendarView) allows you to view data in a calendar format. </span></span></para>
        </item>
        <item>
          <para> <span data-ttu-id="40526-p104">
				El tipo de vista Tarjetas de visita (olCardView) permite ver los datos de una serie de tarjetas de visita. Todas las tarjetas muestran la información que contiene el elemento y se pueden ordenar.
</span><span class="sxs-lookup"><span data-stu-id="40526-p104">The card view type (olCardView) allows you to view data in a series of cards. Each card displays the information contained by the item and can be sorted. </span></span></para>
        </item>
        <item>
          <para> <span data-ttu-id="40526-p105">
				El tipo de vista de iconos (olIconView) permite ver los datos como iconos, de forma parecida a una carpeta o explorador de Windows.  
</span><span class="sxs-lookup"><span data-stu-id="40526-p105">The icon view type (olIconView) allows you to view data as icons, similar to a Windows folder or explorer.  </span></span></para>
        </item>
        <item>
          <para> <span data-ttu-id="40526-p106">
				El tipo de vista Escala de tiempo (olTimelineView) permite ver los datos a medida que se reciben en una escala de tiempo lineal personalizable.
</span><span class="sxs-lookup"><span data-stu-id="40526-p106">The timeline view type (olTimelineView) allows you to view data as it is received in a customizable linear time line. </span></span></para>
        </item>
      </list>
      <para><span data-ttu-id="40526-110">Las vistas se definen y personalizan mediante el objeto <b>View</b> <see cref="P:Microsoft.Office.Interop.Outlook.View.XML" /> (propiedad).</span><span class="sxs-lookup"><span data-stu-id="40526-110">Views are defined and customized using the <b>View</b> object's <see cref="P:Microsoft.Office.Interop.Outlook.View.XML" />  property.</span></span> <span data-ttu-id="40526-111">La propiedad <b>XML</b> permite crear y establecer un esquema XML personalizado que define las distintas características de una vista.</span><span class="sxs-lookup"><span data-stu-id="40526-111">The <b>XML</b> property allows you to create and set a customized XML schema that defines the various features of a view.</span></span></para>
      <para><span data-ttu-id="40526-112">Usar <b>vistas</b>(<paramref name="index" />), donde <paramref name="index" /> es el nombre del objeto <b>View</b> o su valor ordinal, para devolver un solo objeto <b>View</b> .</span><span class="sxs-lookup"><span data-stu-id="40526-112">Use <b>Views</b>(<paramref name="index" />), where <paramref name="index" /> is the name of the <b>View</b> object or its ordinal value, to return a single <b>View</b> object.</span></span></para>
      <para><span data-ttu-id="40526-113">Usar el <see cref="M:Microsoft.Office.Interop.Outlook._Views.Add(System.String,Microsoft.Office.Interop.Outlook.OlViewType,Microsoft.Office.Interop.Outlook.OlViewSaveOption)" /> (método) de la colección <b>Views</b> para crear una nueva vista.</span><span class="sxs-lookup"><span data-stu-id="40526-113">Use the <see cref="M:Microsoft.Office.Interop.Outlook._Views.Add(System.String,Microsoft.Office.Interop.Outlook.OlViewType,Microsoft.Office.Interop.Outlook.OlViewSaveOption)" />  method of the <b>Views</b> collection to create a new view.</span></span> </para>
      <para><span data-ttu-id="40526-114">Use siempre <see cref="M:Microsoft.Office.Interop.Outlook.View.Save" /> para guardar una vista después de cambiar cualquier propiedad de la vista.</span><span class="sxs-lookup"><span data-stu-id="40526-114">Always use <see cref="M:Microsoft.Office.Interop.Outlook.View.Save" /> to save a view after you change any property of the view.</span></span></para>
      <para> </para></remarks>
  </Docs>
  <Members>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Outlook.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook.View.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Outlook::Application ^ Application { Microsoft::Office::Interop::Outlook::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(61440)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(61440)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="40526-115">Devuelve un <see cref="T:Microsoft.Office.Interop.Outlook.Application" /> object que representa la aplicación Outlook principal para el objeto.</span><span class="sxs-lookup"><span data-stu-id="40526-115">Returns an <see cref="T:Microsoft.Office.Interop.Outlook.Application" />  object that represents the parent Outlook application for the  object.</span></span> <span data-ttu-id="40526-116">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="40526-116">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Apply">
      <MemberSignature Language="C#" Value="public void Apply ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Apply() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook.View.Apply" />
      <MemberSignature Language="VB.NET" Value="Public Sub Apply ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Apply();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(407)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="40526-117">Se aplica a la vista a la interfaz de usuario de Microsoft Outlook.</span><span class="sxs-lookup"><span data-stu-id="40526-117">Applies the view to the Microsoft Outlook user interface.</span></span></summary>
        <remarks><para><span data-ttu-id="40526-118">Para restablecer la vista actual correctamente, debe hacer una <see cref="M:Microsoft.Office.Interop.Outlook.View.Reset" /> y, a continuación, <b>View.Apply</b>.</span><span class="sxs-lookup"><span data-stu-id="40526-118">To properly reset the current view, you must do a <see cref="M:Microsoft.Office.Interop.Outlook.View.Reset" /> and then a <b>View.Apply</b>.</span></span> <span data-ttu-id="40526-119">En el siguiente ejemplo de código se muestra el orden de las llamadas:</span><span class="sxs-lookup"><span data-stu-id="40526-119">The code sample below illustrates the order of the calls:</span></span></para>
          <code>Sub ResetView()
    Dim v As Outlook.View
    ' Save a reference to the current view object
    v = Application.ActiveExplorer().CurrentView
    ' Reset and then apply the current view
    v.Reset()
    v.Apply()
End Sub</code>
          <code>private void ResetView()
{
    // Save a reference to the current view object    
    Outlook.View v = Application.ActiveExplorer().CurrentView 
        as Outlook.View; 
    
    // Reset and then apply the current view
    v.Reset();
    v.Apply();
}</code>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Class">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.OlObjectClass Class { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Outlook.OlObjectClass Class" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook.View.Class" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Class As OlObjectClass" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Outlook::OlObjectClass Class { Microsoft::Office::Interop::Outlook::OlObjectClass get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(61450)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(61450)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.OlObjectClass</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="40526-120">Devuelve un <see cref="T:Microsoft.Office.Interop.Outlook.OlObjectClass" /> constante que indica la clase del objeto.</span><span class="sxs-lookup"><span data-stu-id="40526-120">Returns an <see cref="T:Microsoft.Office.Interop.Outlook.OlObjectClass" /> constant indicating the object's class.</span></span> <span data-ttu-id="40526-121">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="40526-121">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.View Copy (string Name, Microsoft.Office.Interop.Outlook.OlViewSaveOption SaveOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Outlook.View Copy([in]string Name, [in]valuetype Microsoft.Office.Interop.Outlook.OlViewSaveOption SaveOption) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook.View.Copy(System.String,Microsoft.Office.Interop.Outlook.OlViewSaveOption)" />
      <MemberSignature Language="VB.NET" Value="Public Function Copy (Name As String, Optional SaveOption As OlViewSaveOption) As View" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(61490)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.View</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Name" Type="System.String" />
        <Parameter Name="SaveOption" Type="Microsoft.Office.Interop.Outlook.OlViewSaveOption" />
      </Parameters>
      <Docs>
        <param name="Name"><span data-ttu-id="40526-122">Representa el nombre del nuevo objeto <b>View</b>.</span><span class="sxs-lookup"><span data-stu-id="40526-122">Represents the name of the new <b>View</b> object.</span></span></param>
        <param name="SaveOption"><span data-ttu-id="40526-123">La operación de guardar opción que define los permisos del objeto <b>View</b>.</span><span class="sxs-lookup"><span data-stu-id="40526-123">The save option that defines the permissions of the <b>View</b> object.</span></span></param>
        <summary><span data-ttu-id="40526-124">Crea una nueva instancia de un <see cref="T:Microsoft.Office.Interop.Outlook.View" /> objeto.</span><span class="sxs-lookup"><span data-stu-id="40526-124">Creates a new instance of a <see cref="T:Microsoft.Office.Interop.Outlook.View" /> object.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Delete() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook.View.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(61514)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="40526-125">Elimina un objeto de la colección.</span><span class="sxs-lookup"><span data-stu-id="40526-125">Deletes an object from the collection.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public string Filter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Filter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook.View.Filter" />
      <MemberSignature Language="VB.NET" Value="Public Property Filter As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Filter { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(409)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(409)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(409)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="40526-126">Devuelve o establece un valor de <b>cadena</b> (<b>cadena</b> en C#) que representa el filtro para una vista.</span><span class="sxs-lookup"><span data-stu-id="40526-126">Returns or sets a <b>String</b> (<b>string</b> in C#) value that represents the filter for a view.</span></span>  <span data-ttu-id="40526-127">Lectura y escritura.</span><span class="sxs-lookup"><span data-stu-id="40526-127">Read/write.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="40526-128">El valor de esta propiedad es una cadena, con sintaxis DASL (DAV Searching and Locating), que representa el filtro actual para la vista.</span><span class="sxs-lookup"><span data-stu-id="40526-128">The value of this property is a string, in DAV Searching and Locating (DASL) syntax, that represents the current filter for the view.</span></span> <span data-ttu-id="40526-129">Para obtener más información acerca del uso de sintaxis DASL para filtrar elementos en una vista, vea <a href="http://go.microsoft.com/fwlink/?LinkId=87855">Filtrar elementos</a></span><span class="sxs-lookup"><span data-stu-id="40526-129">For more information about using DASL syntax to filter items in a view, see <a href="http://go.microsoft.com/fwlink/?LinkId=87855">Filtering Items</a></span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="GoToDate">
      <MemberSignature Language="C#" Value="public void GoToDate (DateTime Date);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GoToDate([in]valuetype System.DateTime Date) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook.View.GoToDate(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GoToDate (Date As DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GoToDate(DateTime Date);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64054)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Date" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="Date"><span data-ttu-id="40526-130">Fecha para la que debe cambiarse la vista.</span><span class="sxs-lookup"><span data-stu-id="40526-130">The date to which the view should be changed.</span></span></param>
        <summary><span data-ttu-id="40526-131">Cambia la fecha usada por la vista actual para mostrar información.</span><span class="sxs-lookup"><span data-stu-id="40526-131">Changes the date used by the current view to display information.</span></span></summary>
        <remarks><para><span data-ttu-id="40526-132">Para especificar una fecha para ir a en una vista actual, como un <see cref="T:Microsoft.Office.Interop.Outlook.CalendarView" /> de objetos, en primer lugar deberá obtener una <see cref="T:Microsoft.Office.Interop.Outlook.View" /> objeto para la vista actual mediante el uso de <see cref="P:Microsoft.Office.Interop.Outlook._Explorer.CurrentView" /> en lugar de <see cref="P:Microsoft.Office.Interop.Outlook.MAPIFolder.CurrentView" />.</span><span class="sxs-lookup"><span data-stu-id="40526-132">To specify a date to go to in a current view, such as a <see cref="T:Microsoft.Office.Interop.Outlook.CalendarView" /> object, you should first obtain a <see cref="T:Microsoft.Office.Interop.Outlook.View" /> object for the current view by using <see cref="P:Microsoft.Office.Interop.Outlook._Explorer.CurrentView" /> instead of <see cref="P:Microsoft.Office.Interop.Outlook.MAPIFolder.CurrentView" />.</span></span> <span data-ttu-id="40526-133">En el siguiente ejemplo de código se indica cómo hacerlo.</span><span class="sxs-lookup"><span data-stu-id="40526-133">The following code sample demonstrates how to perform this action.</span></span> </para>
          <code>Sub TestGoToDate()
    Dim oCV As Outlook.CalendarView
    Dim oExpl As Outlook.Explorer
    Dim datGoTo As Date

    datGoTo = "11/7/2005"

    ' Display the contents of the Calendar default folder.
    oExpl = Application.Explorers.Add( _
        Application.Session.GetDefaultFolder( -
        Outlook.OlDefaultFolders.olFolderCalendar), _
        Outlook.OlFolderDisplayMode.olFolderDisplayFolderOnly)
    oExpl.Display()

    ' Retrieve the current view by calling the 
    ' CurrentView property of the Explorer object.
    oCV = oExpl.CurrentView

    ' Set the CalendarViewMode property of the 
    ' current view to display items by day.
    oCV.CalendarViewMode = Outlook.OlCalendarViewMode.olCalendarViewDay

    ' Call the GoToDate method to set the date
    ' for which information is displayed in the view.
    oCV.GoToDate(datGoTo)
End Sub</code>
          <code>private void TestGoToDate()
{
    Outlook.CalendarView oCV;
    Outlook.Explorer oExpl;
    System.DateTime datGoTo;

    datGoTo = DateTime.Parse("11/7/2005");

    // Display the contents of the Calendar default folder.
    oExpl = Application.Explorers.Add(
        Application.Session.GetDefaultFolder(
        Outlook.OlDefaultFolders.olFolderCalendar),
        Outlook.OlFolderDisplayMode.olFolderDisplayFolderOnly);
    oExpl.Display();

    // Retrieve the current view by calling the 
    // CurrentView property of the Explorer object.
    oCV = (Outlook.CalendarView)(oExpl.CurrentView);

    // Set the CalendarViewMode property of the 
    // current view to display items by day.
    oCV.CalendarViewMode = 
        Outlook.OlCalendarViewMode.olCalendarViewDay;

    // Call the GoToDate method to set the date
    // for which information is displayed in the view.
    oCV.GoToDate(datGoTo);
}</code>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Language">
      <MemberSignature Language="C#" Value="public string Language { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Language" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook.View.Language" />
      <MemberSignature Language="VB.NET" Value="Public Property Language As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Language { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64065)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(64065)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(64065)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="40526-134">Devuelve o establece un valor de <b>cadena</b> (<b>cadena</b> en C#) que representa la configuración de idioma para el objeto que define el idioma utilizado en el menú.</span><span class="sxs-lookup"><span data-stu-id="40526-134">Returns or sets a <b>String</b> (<b>string</b> in C#) value that represents the language setting for the object that defines the language used in the menu.</span></span> <span data-ttu-id="40526-135">Lectura y escritura.</span><span class="sxs-lookup"><span data-stu-id="40526-135">Read/write.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="40526-136">La propiedad <b>Language</b> utiliza una <b>cadena</b> (<b>cadena</b> en C#) para representar una etiqueta de idioma ISO.</span><span class="sxs-lookup"><span data-stu-id="40526-136">The <b>Language</b> property uses a <b>String</b> (<b>string</b> in C#) to represent an ISO language tag.</span></span> <span data-ttu-id="40526-137">Por ejemplo, la cadena "EN-US" representa el código ISO de "Estados Unidos - inglés."</span><span class="sxs-lookup"><span data-stu-id="40526-137">For example, the string "EN-US" represents the ISO code for "United States - English."</span></span></para>
          <para><span data-ttu-id="40526-p117">Si se especifica un código válido de idioma, el objeto sólo estará disponible en el menú Ver para el tipo de idioma especificado. Si no se especifica un valor, el elemento de objeto estará disponible para todos los tipos de idioma. El valor predeterminado de esta propiedad es una cadena vacía.</span><span class="sxs-lookup"><span data-stu-id="40526-p117">If a valid language code is specified, the object will only be available in the View menu for the specified language type. If no value is specified, the object item is available for all language types. The default value for this property is an empty string.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="LockUserChanges">
      <MemberSignature Language="C#" Value="public bool LockUserChanges { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool LockUserChanges" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook.View.LockUserChanges" />
      <MemberSignature Language="VB.NET" Value="Public Property LockUserChanges As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool LockUserChanges { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64064)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(64064)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(64064)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="40526-141">Devuelve o establece un valor <b>booleano</b> (<b>bool</b> en C#) que indica si un usuario puede modificar la configuración de la vista actual.</span><span class="sxs-lookup"><span data-stu-id="40526-141">Returns or sets a <b>Boolean</b> (<b>bool</b> in C#) value that indicates whether a user can modify the settings of the current view.</span></span> <span data-ttu-id="40526-142">Lectura y escritura.</span><span class="sxs-lookup"><span data-stu-id="40526-142">Read/write.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="40526-p119">Si el <b>es True</b>, el usuario puede modificar la configuración de la vista actual. Sin embargo, no se guardarán los cambios realizados en la interfaz. Si <b>False</b> (valor predeterminado), los cambios se guardarán.</span><span class="sxs-lookup"><span data-stu-id="40526-p119">If <b>True</b>, the user can modify the settings of the current view. However, changes made to the interface will not be saved. If <b>False</b> (the default), any changes will be saved.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string this { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook.View.Name" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ default { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="40526-146">Devuelve o establece un valor de <b>cadena</b> (<b>cadena</b> en C#) que representa el nombre para mostrar para el objeto.</span><span class="sxs-lookup"><span data-stu-id="40526-146">Returns or sets a <b>String</b> (<b>string</b> in C#) value that represents the display name for the object.</span></span> <span data-ttu-id="40526-147">Lectura y escritura.</span><span class="sxs-lookup"><span data-stu-id="40526-147">Read/write.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook.View.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(61441)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(61441)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="40526-p121">Devuelve al elemento primario del <b>objeto</b> del objeto especificado. Es de sólo lectura.</span><span class="sxs-lookup"><span data-stu-id="40526-p121">Returns the parent <b>Object</b> of the specified object. Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook.View.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64068)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="40526-150">Restablece la configuración original de una vista integrada de Microsoft Outlook.</span><span class="sxs-lookup"><span data-stu-id="40526-150">Resets a built-in Microsoft Outlook view to its original settings.</span></span></summary>
        <remarks><para><span data-ttu-id="40526-151">Este método sólo funciona con vistas integradas de Outlook.</span><span class="sxs-lookup"><span data-stu-id="40526-151">This method works only on built-in Outlook views.</span></span></para>
          <para><span data-ttu-id="40526-152">Para restablecer la vista actual correctamente, debe hacer una <b>llamada a View.Reset</b> y, a continuación, un <see cref="M:Microsoft.Office.Interop.Outlook.View.Apply" />.</span><span class="sxs-lookup"><span data-stu-id="40526-152">To properly reset the current view, you must do a <b>View.Reset</b> and then a <see cref="M:Microsoft.Office.Interop.Outlook.View.Apply" />.</span></span> <span data-ttu-id="40526-153">En el siguiente ejemplo de código se muestra el orden de las llamadas:</span><span class="sxs-lookup"><span data-stu-id="40526-153">The code sample below illustrates the order of the calls:</span></span></para>
          <code>Sub ResetView()
    Dim v as Outlook.View
    ' Save a reference to the current view object
    Set v = Application.ActiveExplorer().CurrentView
    ' Reset and then apply the current view
    v.Reset
    v.Apply
End Sub</code>
          <code>private void ResetView()
{
    // Save a reference to the current view object    
    Outlook.View v = Application.ActiveExplorer().CurrentView 
        as Outlook.View; 
    
    // Reset and then apply the current view
    v.Reset();
    v.Apply();
}</code>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Save() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook.View.Save" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(61512)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="40526-154">Guarda la vista o los cambios realizados en una vista.</span><span class="sxs-lookup"><span data-stu-id="40526-154">Saves the view, or saves the changes to a view.</span></span></summary>
        <remarks><para><span data-ttu-id="40526-155">Use siempre <b>Guardar</b> para guardar una vista después de cambiar cualquier propiedad de la vista.</span><span class="sxs-lookup"><span data-stu-id="40526-155">Always use <b>Save</b> to save a view after you change any property of the view.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveOption">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.OlViewSaveOption SaveOption { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Outlook.OlViewSaveOption SaveOption" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook.View.SaveOption" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SaveOption As OlViewSaveOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Outlook::OlViewSaveOption SaveOption { Microsoft::Office::Interop::Outlook::OlViewSaveOption get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64063)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(64063)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.OlViewSaveOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="40526-156">Devuelve un <see cref="T:Microsoft.Office.Interop.Outlook.OlViewSaveOption" /> constante que especifica las carpetas en la que está disponible la vista especificada y los permisos de lectura adjuntos a la vista.</span><span class="sxs-lookup"><span data-stu-id="40526-156">Returns an <see cref="T:Microsoft.Office.Interop.Outlook.OlViewSaveOption" />  constant that specifies the folders in which the specified view is available and the read permissions attached to the view.</span></span>  <span data-ttu-id="40526-157">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="40526-157">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="40526-158">La propiedad <b>SaveOption</b> se establece cuando el <see cref="T:Microsoft.Office.Interop.Outlook.View" /> objeto se crea mediante el uso de la <see cref="M:Microsoft.Office.Interop.Outlook._Views.Add(System.String,Microsoft.Office.Interop.Outlook.OlViewType,Microsoft.Office.Interop.Outlook.OlViewSaveOption)" /> (método).</span><span class="sxs-lookup"><span data-stu-id="40526-158">The <b>SaveOption</b> property is set when the <see cref="T:Microsoft.Office.Interop.Outlook.View" /> object is created by using the <see cref="M:Microsoft.Office.Interop.Outlook._Views.Add(System.String,Microsoft.Office.Interop.Outlook.OlViewType,Microsoft.Office.Interop.Outlook.OlViewSaveOption)" />  method.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Session">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.NameSpace Session { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Outlook.NameSpace Session" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook.View.Session" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Session As NameSpace" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Outlook::NameSpace ^ Session { Microsoft::Office::Interop::Outlook::NameSpace ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(61451)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(61451)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.NameSpace</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="40526-159">Devuelve el <see cref="T:Microsoft.Office.Interop.Outlook.NameSpace" /> objeto para la sesión actual.</span><span class="sxs-lookup"><span data-stu-id="40526-159">Returns the <see cref="T:Microsoft.Office.Interop.Outlook.NameSpace" />  object for the current session.</span></span> <span data-ttu-id="40526-160">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="40526-160">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="40526-161">La propiedad <b>Session</b> y el <see cref="M:Microsoft.Office.Interop.Outlook._Application.GetNamespace(System.String)" /> método puede usarse indistintamente para obtener el objeto <b>NameSpace</b> de la sesión actual.</span><span class="sxs-lookup"><span data-stu-id="40526-161">The <b>Session</b> property and the <see cref="M:Microsoft.Office.Interop.Outlook._Application.GetNamespace(System.String)" /> method can be used interchangeably to obtain the <b>NameSpace</b> object for the current session.</span></span> <span data-ttu-id="40526-162">Los dos miembros tienen el mismo propósito.</span><span class="sxs-lookup"><span data-stu-id="40526-162">Both members serve the same purpose.</span></span> <span data-ttu-id="40526-163">Por ejemplo, los siguientes pares de instrucciones realizan la misma función:</span><span class="sxs-lookup"><span data-stu-id="40526-163">For example, the following pairs of statements perform the same function:</span></span></para>
          <code>Dim objNamespace As Outlook.NameSpace = _
    Application.GetNamespace("MAPI")</code>
          <code>Dim objSession As Outlook.NameSpace = Application.Session</code>
          <code>Outlook.NameSpace objNamespace = 
    Application.GetNamespace("MAPI");</code>
          <code>Outlook.NameSpace objSession = Application.Session;</code>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Standard">
      <MemberSignature Language="C#" Value="public bool Standard { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Standard" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook.View.Standard" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Standard As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Standard { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64062)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(64062)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="40526-164">Devuelve un <b>valor Boolean</b> (<b>bool</b> en C#) que especifica si la vista es una vista integrada de Outlook.</span><span class="sxs-lookup"><span data-stu-id="40526-164">Returns a <b>Boolean</b> (<b>bool</b> in C#) that specifies whether or not the view is a built-in Outlook view.</span></span> <span data-ttu-id="40526-165">Solo lectura</span><span class="sxs-lookup"><span data-stu-id="40526-165">Read-only</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ViewType">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.OlViewType ViewType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Outlook.OlViewType ViewType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook.View.ViewType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ViewType As OlViewType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Outlook::OlViewType ViewType { Microsoft::Office::Interop::Outlook::OlViewType get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(404)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(404)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.OlViewType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="40526-166">Devuelve un <see cref="T:Microsoft.Office.Interop.Outlook.OlViewType" /> escriba constante que representa la vista de un <see cref="T:Microsoft.Office.Interop.Outlook.View" /> objeto.</span><span class="sxs-lookup"><span data-stu-id="40526-166">Returns an <see cref="T:Microsoft.Office.Interop.Outlook.OlViewType" />  constant representing the view type of a <see cref="T:Microsoft.Office.Interop.Outlook.View" /> object.</span></span> <span data-ttu-id="40526-167">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="40526-167">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="40526-p128">Esta propiedad no tiene ningún efecto en los iconos mostrados en el panel de accesos directos. Se han quitado los iconos grandes y si se establece esta propiedad en <b>olLargeIcon</b>, no tendrá ningún efecto.</span><span class="sxs-lookup"><span data-stu-id="40526-p128">This property does not have any effect on the icons displayed in the Shortcuts pane. Large icons have been removed and if this property is set to <b>olLargeIcon</b>, it will not have any effect.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="XML">
      <MemberSignature Language="C#" Value="public string XML { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string XML" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook.View.XML" />
      <MemberSignature Language="VB.NET" Value="Public Property XML As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ XML { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64060)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(64060)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(64060)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="40526-170">Devuelve o establece un valor de <b>cadena</b> (<b>cadena</b> en C#) que especifica la definición XML de la vista actual.</span><span class="sxs-lookup"><span data-stu-id="40526-170">Returns or sets a <b>String</b> (<b>string</b> in C#) value that specifies the XML definition of the current view.</span></span>  <span data-ttu-id="40526-171">Lectura y escritura.</span><span class="sxs-lookup"><span data-stu-id="40526-171">Read/write.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="40526-p130">La definición XML describe el tipo de vista mediante una serie de etiquetas y palabras clave que corresponden a las diferentes propiedades de la vista en sí. Cuando se crea la vista, se analiza la definición XML para mostrar la configuración de la nueva vista.</span><span class="sxs-lookup"><span data-stu-id="40526-p130">The XML definition describes the view type by using a series of tags and keywords corresponding to various properties of the view itself. When the view is created, the XML definition is parsed to render the settings for the new view.</span></span></para>
          <para><span data-ttu-id="40526-174">Para determinar la estructura de la propiedad XML al crear vistas, puede crear una vista mediante la interfaz de usuario de Outlook y, después, puede recuperar la propiedad XML de dicha vista.</span><span class="sxs-lookup"><span data-stu-id="40526-174">To determine how the XML should be structured when creating views, you can create a view by using the Outlook user interface and then you can retrieve the XML property for that view.</span></span></para>
          <para><span data-ttu-id="40526-175">Para agregar mediante programación un campo personalizado a una vista, use la <see cref="M:Microsoft.Office.Interop.Outlook._ViewFields.Add(System.String)" /> (método).</span><span class="sxs-lookup"><span data-stu-id="40526-175">To programmatically add a custom field to a view, use the <see cref="M:Microsoft.Office.Interop.Outlook._ViewFields.Add(System.String)" /> method.</span></span> <span data-ttu-id="40526-176">Esta es la manera recomendada para cambiar la vista dinámicamente a través de la propiedad <b>View.XML</b> .</span><span class="sxs-lookup"><span data-stu-id="40526-176">This is the recommended way to dynamically change the view over setting the <b>View.XML</b> property.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
  </Members>
</Type>