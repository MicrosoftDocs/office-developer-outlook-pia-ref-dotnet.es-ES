<Type Name="_Rule" FullName="Microsoft.Office.Interop.Outlook._Rule">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0fc7984ff84a0eea00858aa8ce56abf24313ff68" /><Meta Name="ms.sourcegitcommit" Value="372abf58b21f4fab503d106f0e8c8a2ac45f9332" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="01/12/2019" /><Meta Name="ms.locfileid" Value="27902799" /></Metadata><TypeSignature Language="C#" Value="public interface _Rule" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract _Rule" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Outlook._Rule" />
  <TypeSignature Language="VB.NET" Value="Public Interface _Rule" />
  <TypeSignature Language="C++ CLI" Value="public interface class _Rule" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("000630CD-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4160)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Esto es una interfaz principal en una coclase COM que requiere código administrado para la interoperabilidad con el objeto COM correspondiente. Use esta interfaz principal sólo cuando el método que desea usar comparte el mismo nombre que un evento del objeto COM; en este caso, se convierte en esta interfaz para llamar al método y convierte en la interfaz de eventos más reciente para conectar con el evento. De lo contrario, use la interfaz de .NET que se deriva de la coclase COM para tener acceso a los métodos, propiedades y eventos del objeto COM. Para obtener información sobre el objeto COM, consulte <see cref="T:Microsoft.Office.Interop.Outlook.Rule" />.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Actions">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.RuleActions Actions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Outlook.RuleActions Actions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._Rule.Actions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Actions As RuleActions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Outlook::RuleActions ^ Actions { Microsoft::Office::Interop::Outlook::RuleActions ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64272)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(64272)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.RuleActions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Devuelve un <see cref="T:Microsoft.Office.Interop.Outlook.RuleActions" /> objeto de colección que representa todas las acciones de regla disponibles para la regla. Solo lectura.</summary>
        <value>To be added.</value>
        <remarks><para>Puede enumerar y habilitar reglas con cualquier acción de regla que admiten las reglas y el Asistente para alertas, pero puede crear mediante programación reglas que tengan sólo las acciones de regla más comunes y no cualquier acción de regla que admite el Asistente de alertas y reglas. Para obtener más información sobre las acciones de regla admitidas, vea <a href="http://go.microsoft.com/fwlink/?LinkId=87797">Especificar acciones de regla</a></para>
          <para>A través de la propiedad <b>Actions</b>, cada regla tiene asociado un objeto <b>RuleActions</b>. La colección <b>RuleActions</b> es un objeto fijo: no se puede agregar o quitar elementos de esta colección. Acciones de regla que estén habilitadas en la regla tendrán una acción de regla habilitada en la colección <b>RuleActions</b>. Regla de acciones que no están habilitadas en la regla tendrán una acción de regla en esta colección que tiene el <see cref="P:Microsoft.Office.Interop.Outlook._RuleAction.Enabled" /> propiedad establecida en <b>False</b>. Acciones de regla que no son compatibles durante la creación de reglas mediante programación sólo pueden enumerarse en la colección <b>RuleActions</b> para una regla existente, pero como la colección <b>RuleActions</b> es fija, no se puede crear una regla y agregar dichas acciones a la colección <b>RuleActions</b> asociada.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Outlook.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._Rule.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Outlook::Application ^ Application { Microsoft::Office::Interop::Outlook::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(61440)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(61440)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Devuelve un <see cref="T:Microsoft.Office.Interop.Outlook.Application" /> object que representa la aplicación Outlook principal para el objeto. Solo lectura.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Class">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.OlObjectClass Class { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Outlook.OlObjectClass Class" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._Rule.Class" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Class As OlObjectClass" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Outlook::OlObjectClass Class { Microsoft::Office::Interop::Outlook::OlObjectClass get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(61450)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(61450)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.OlObjectClass</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Devuelve un <see cref="T:Microsoft.Office.Interop.Outlook.OlObjectClass" /> constante que indica la clase del objeto. Solo lectura.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Conditions">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.RuleConditions Conditions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Outlook.RuleConditions Conditions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._Rule.Conditions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Conditions As RuleConditions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Outlook::RuleConditions ^ Conditions { Microsoft::Office::Interop::Outlook::RuleConditions ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64297)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(64297)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.RuleConditions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Devuelve un <see cref="T:Microsoft.Office.Interop.Outlook.RuleConditions" /> objeto de colección que representa todas las condiciones de regla disponibles para la regla. Solo lectura.</summary>
        <value>To be added.</value>
        <remarks><para>Una condición para una regla indica una condición bajo la que debe aplicarse la regla. Las <b>condiciones</b> y <see cref="P:Microsoft.Office.Interop.Outlook._Rule.Exceptions" /> propiedades comparten el mismo conjunto de condiciones y devolver un objeto de colección <b>RuleConditions</b> correspondiente.</para>
          <para>Mediante programación puede enumerar y habilitar reglas con cualquier condición de regla que admiten las reglas y el Asistente para alertas, pero puede crear reglas que tengan sólo las condiciones de regla más comunes y no cualquier condición de regla que admite el Asistente de alertas y reglas. Para obtener más información sobre la compatibilidad de condición de regla, vea <a href="http://go.microsoft.com/fwlink/?LinkId=87803">Especificar condiciones de regla</a></para>
          <para>A través de la propiedad <b>Conditions</b>, cada regla está asociada a un objeto <b>RuleConditions</b>. La colección <b>RuleConditions</b> es un objeto fijo: no se puede agregar o quitar elementos de esta colección. Las condiciones de regla que estén habilitadas en la regla tendrán una condición de regla habilitada en la colección <b>RuleConditions</b>. Regla de condiciones que no estén habilitadas en la regla tendrán una condición de regla en esta colección que tiene el <see cref="P:Microsoft.Office.Interop.Outlook._RuleCondition.Enabled" /> propiedad establecida en <b>False</b>. Las condiciones de regla que no son compatibles durante la creación de reglas mediante programación sólo pueden enumerarse en la colección <b>RuleConditions</b> para una regla existente, pero como la colección <b>RuleConditions</b> es fija, no se puede crear una regla y agregar dichas condiciones a la colección <b>RuleConditions</b> asociada.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._Rule.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Enabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(103)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(103)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(103)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Devuelve o establece un valor <b>booleano</b> (<b>bool</b> en C#) que determina si se aplica la regla. Lectura y escritura.</summary>
        <value>To be added.</value>
        <remarks><para>Establecer la propiedad <b>Enabled</b> de una regla no garantiza que se habilitará la regla. La regla sólo estará habilitada después <see cref="M:Microsoft.Office.Interop.Outlook._Rules.Save(System.Object)" /> se ejecuta correctamente.</para>
          <para>Uso de <b>Rule.Enabled</b> y <b>Rules.Save</b> aplica la regla de forma coherente y hace que las reglas más allá de la sesión actual. Al habilitar una regla (que se ha guardado correctamente) garantiza que se aplicará la regla. Si se trata de una regla de cliente local, se aplicará la regla cuando Outlook se está ejecutando y si la regla es una regla basada en servidor, se aplicará independientemente de si se está ejecutando Outlook. Si no habilita la regla, a continuación, se define la regla, pero no se aplicará. Sin embargo, puede usar <see cref="M:Microsoft.Office.Interop.Outlook._Rule.Execute(System.Object,System.Object,System.Object,System.Object)" /> para aplicar una regla como una operación de uso único, independientemente de si está habilitada la regla.  </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Exceptions">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.RuleConditions Exceptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Outlook.RuleConditions Exceptions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._Rule.Exceptions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Exceptions As RuleConditions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Outlook::RuleConditions ^ Exceptions { Microsoft::Office::Interop::Outlook::RuleConditions ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64307)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(64307)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.RuleConditions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Devuelve un <see cref="T:Microsoft.Office.Interop.Outlook.RuleConditions" /> objeto de colección que representa todas las condiciones de excepción de regla disponibles para la regla. Solo lectura.</summary>
        <value>To be added.</value>
        <remarks><para>Una condición de excepción de una regla indica una condición en la que no se aplique la regla. Tanto el <see cref="P:Microsoft.Office.Interop.Outlook._Rule.Conditions" /> y propiedades de <b>excepciones</b> comparten el mismo conjunto de condiciones y devuelven un objeto de colección <b>RuleConditions</b> correspondiente.</para>
          <para>Es posible enumerar y habilitar reglas con cualquier condición de excepción de regla que admiten las reglas y el Asistente para alertas, pero puede crear mediante programación reglas que solamente la usan con más frecuencia las condiciones de excepción de regla, y no cualquier excepción a la regla de condición que puede tener el Reglas y alertas asistente admite. Para obtener más información sobre la compatibilidad de condición de regla, vea <a href="http://go.microsoft.com/fwlink/?LinkId=87803">Especificar condiciones de regla</a></para>
          <para>A través de la propiedad <b>Conditions</b>, cada regla está asociada a un objeto <b>RuleConditions</b>. La colección <b>RuleConditions</b> es un objeto fijo: no se puede agregar o quitar elementos de esta colección. Las condiciones de excepción de regla que estén habilitadas en la regla tendrán una condición de excepción de regla habilitada en la colección <b>RuleConditions</b>. Regla de las condiciones de excepción que no están habilitadas en la regla tendrán una condición de excepción de regla en esta colección que tiene el <see cref="P:Microsoft.Office.Interop.Outlook._RuleCondition.Enabled" /> propiedad establecida en <b>False</b>. Las condiciones de excepción de regla que no son compatibles durante la creación de reglas mediante programación sólo pueden enumerarse en la colección <b>RuleConditions</b> para una regla existente, pero como la colección <b>RuleConditions</b> es fija, no se puede crear una regla y agregar dichas condiciones de excepción a la colección <b>RuleConditions</b> asociada.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public void Execute (object ShowProgress, object Folder, object IncludeSubfolders, object RuleExecuteOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Execute([in]object ShowProgress, [in]object Folder, [in]object IncludeSubfolders, [in]object RuleExecuteOption) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook._Rule.Execute(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Execute (Optional ShowProgress As Object, Optional Folder As Object, Optional IncludeSubfolders As Object, Optional RuleExecuteOption As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64270)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ShowProgress" Type="System.Object" />
        <Parameter Name="Folder" Type="System.Object" />
        <Parameter Name="IncludeSubfolders" Type="System.Object" />
        <Parameter Name="RuleExecuteOption" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="ShowProgress"><b>True</b> para mostrar el cuadro de diálogo de progreso cuando se ejecuta la regla, <b>False</b> para ejecutar la regla sin mostrar el cuadro de diálogo.</param>
        <param name="Folder">Representa la carpeta donde se aplicará la regla.</param>
        <param name="IncludeSubfolders"><b>True</b> para aplicar la regla a subcarpetas de la carpeta indicada por el parámetro Folder; <b>False</b> para aplicar la regla únicamente a esa carpeta pero no a sus subcarpetas.</param>
        <param name="RuleExecuteOption">Representa si la regla se debe aplicar a los mensajes leídos, sin leer o a todos los mensajes de la carpeta o las carpetas especificadas por los parámetros Folder e IncludeSubfolders.</param>
        <summary>Aplica una regla como una operación de un solo uso.</summary>
        <remarks><para>Uso <see cref="M:Microsoft.Office.Interop.Outlook._Rule.Execute(System.Object,System.Object,System.Object,System.Object)" /> para aplicar una regla como una operación de uso único, independientemente de si <see cref="P:Microsoft.Office.Interop.Outlook._Rule.Enabled" /> es <b>True</b>. Utilice <b>Rule.Enabled</b> y, a continuación, <see cref="M:Microsoft.Office.Interop.Outlook._Rules.Save(System.Object)" /> si desea aplicar la regla de forma coherente y conservar las reglas más allá de la sesión actual.</para>
          <para>Los parámetros del método <b>Execute</b> son opcionales. Si no especifica ningún parámetro, se aplicará la regla a todos los mensajes en la Bandeja de entrada, pero no a las subcarpetas de la Bandeja de entrada. Los valores predeterminados para los argumentos opcionales son:</para>
          <list type="table">
            <item>
              <description>Parámetro</description>
              <description>Valor predeterminado</description>
            </item>
            <item>
              <description>ShowProgress</description>
              <description>False</description>
            </item>
            <item>
              <description>Folder</description>
              <description>Bandeja de entrada</description>
            </item>
            <item>
              <description>IncludeSubfolders</description>
              <description>False</description>
            </item>
            <item>
              <description>RuleExecuteOption</description>
              <description>
                <b>OlRuleExecuteOption.olRuleExecuteAllMessages</b>
              </description>
            </item>
          </list>
          <para>Si <paramref name="ShowProgress" /> es <b>True</b> y el usuario cancela el cuadro de diálogo de progreso de la ejecución de la regla se cancela de la misma manera que si el usuario hubiera cancelado de ejecución a través de las reglas y el Asistente de alertas de la regla. Execute devuelve un error cuando el usuario cancela el cuadro de diálogo de progreso.</para>
          <para>Si piensa mostrar una interfaz de usuario de progreso personalizada en lugar de utilizar el cuadro de diálogo de progreso, debe tener en cuenta que no existen eventos que indiquen el momento en que se inicia y finaliza la ejecución de la regla.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecutionOrder">
      <MemberSignature Language="C#" Value="public int ExecutionOrder { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ExecutionOrder" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._Rule.ExecutionOrder" />
      <MemberSignature Language="VB.NET" Value="Public Property ExecutionOrder As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ExecutionOrder { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64267)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(64267)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(64267)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Devuelve o establece un valor <b>entero</b> (<b>int</b> en C#) que indica el orden de ejecución de la regla entre otras reglas de la <see cref="T:Microsoft.Office.Interop.Outlook.Rules" /> colección. Lectura y escritura.</summary>
        <value>To be added.</value>
        <remarks><para>
            <b>Propiedad ExecutionOrder</b> se le asigna directamente con el valor numérico de <paramref name="Index" /> en <see cref="P:Microsoft.Office.Interop.Outlook._Rules.Item(System.Object)" />. Por ejemplo, Rules.Item (1) representa una regla cuya <b>propiedad ExecutionOrder</b> que se va a 1, Rules.Item (2) representa una regla cuya <b>propiedad ExecutionOrder</b> que se va a 2 y Rules.Item (Rules.Count) representa la regla con la que se va a <b>ExecutionOrder</b> <see cref="P:Microsoft.Office.Interop.Outlook._Rules.Count" />.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLocalRule">
      <MemberSignature Language="C#" Value="public bool IsLocalRule { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLocalRule" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._Rule.IsLocalRule" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsLocalRule As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsLocalRule { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64269)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(64269)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Devuelve un <b>valor Boolean</b> (<b>bool</b> en C#) que indica si la regla se ejecuta como una regla de cliente. Solo lectura.</summary>
        <value>To be added.</value>
        <remarks><para>Una regla de cliente ejecuta sólo cuando se ejecuta Outlook. Si <b>IsLocalRule</b> es <b>False</b>, la regla se ejecuta como una regla de servidor.</para>
          <para>Si tiene una cuenta de correo electrónico de Microsoft Exchange Server, el servidor puede aplicar las reglas de servidor a sus mensajes incluso si Outlook no se está ejecutando. Las reglas deben configurarse para que se apliquen a los mensajes en el momento de entregarlos en su Bandeja de entrada en el servidor y deben poder ejecutarse en su totalidad en el mismo. Por ejemplo, una regla no puede ejecutarse en su totalidad en el servidor si la acción especifica que debe imprimirse el mensaje. Si una regla no puede aplicarse en el servidor, se aplicará cuando inicie Outlook.</para>
          <para>Si la colección de reglas de un almacén contiene tanto reglas de servidor como de cliente, en primer lugar se aplican las reglas de servidor y después las reglas de cliente.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._Rule.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(8450)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(8450)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(8450)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Devuelve o establece una <b>cadena</b> (<b>cadena</b> en C#) que representa el nombre de la regla. Lectura y escritura.</summary>
        <value>To be added.</value>
        <remarks><para>
            <b>Name</b> es la propiedad predeterminada y un indizador para una regla en un <see cref="T:Microsoft.Office.Interop.Outlook.Rules" /> objeto de la colección. Se corresponde con <b>PidTagRuleMsgName</b> (0x65EC001E).</para>
          <para>Los nombres de las reglas no son únicos entre las reglas de la misma colección.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._Rule.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(61441)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(61441)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Devuelve al elemento primario del <b>objeto</b> del objeto especificado. Es de sólo lectura.</summary>
        <value>To be added.</value>
        <remarks><para>El elemento principal de la <see cref="T:Microsoft.Office.Interop.Outlook.Rule" /> objeto es el <see cref="T:Microsoft.Office.Interop.Outlook.Rules" /> objeto.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="RuleType">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.OlRuleType RuleType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Outlook.OlRuleType RuleType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._Rule.RuleType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RuleType As OlRuleType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Outlook::OlRuleType RuleType { Microsoft::Office::Interop::Outlook::OlRuleType get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64268)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(64268)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.OlRuleType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Devuelve una constante de la <see cref="T:Microsoft.Office.Interop.Outlook.OlRuleType" /> (enumeración) que indica si la regla se aplica a los mensajes que se envían o reciben. Solo lectura.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Session">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.NameSpace Session { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Outlook.NameSpace Session" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._Rule.Session" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Session As NameSpace" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Outlook::NameSpace ^ Session { Microsoft::Office::Interop::Outlook::NameSpace ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(61451)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(61451)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.NameSpace</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Devuelve el <see cref="T:Microsoft.Office.Interop.Outlook.NameSpace" /> objeto para la sesión actual. Solo lectura.</summary>
        <value>To be added.</value>
        <remarks><para>La propiedad <b>Session</b> y el <see cref="M:Microsoft.Office.Interop.Outlook._Application.GetNamespace(System.String)" /> método puede usarse indistintamente para obtener el objeto <b>NameSpace</b> de la sesión actual. Los dos miembros tienen el mismo propósito. Por ejemplo, los siguientes pares de instrucciones realizan la misma función:</para>
          <code>Dim objNamespace As Outlook.NameSpace = _
    Application.GetNamespace("MAPI")</code>
          <code>Dim objSession As Outlook.NameSpace = Application.Session</code>
          <code>Outlook.NameSpace objNamespace = 
    Application.GetNamespace("MAPI");</code>
          <code>Outlook.NameSpace objSession = Application.Session;</code>
          <para> </para></remarks>
      </Docs>
    </Member>
  </Members>
</Type>
