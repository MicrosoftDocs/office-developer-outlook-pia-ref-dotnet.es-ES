<Type Name="_FormRegion" FullName="Microsoft.Office.Interop.Outlook._FormRegion">
  <Metadata><Meta Name="ms.openlocfilehash" Value="170a1d134f5a487d0a43dde3247d20e4b029e8bb" /><Meta Name="ms.sourcegitcommit" Value="372abf58b21f4fab503d106f0e8c8a2ac45f9332" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="01/12/2019" /><Meta Name="ms.locfileid" Value="27902274" /></Metadata><TypeSignature Language="C#" Value="public interface _FormRegion" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract _FormRegion" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Outlook._FormRegion" />
  <TypeSignature Language="VB.NET" Value="Public Interface _FormRegion" />
  <TypeSignature Language="C++ CLI" Value="public interface class _FormRegion" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("0006305A-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4160)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="0dc2a-101">Esto es una interfaz principal en una coclase COM que requiere código administrado para la interoperabilidad con el objeto COM correspondiente.</span><span class="sxs-lookup"><span data-stu-id="0dc2a-101">This is a primary interface in a COM coclass that is required by managed code for interoperability with the corresponding COM object.</span></span> <span data-ttu-id="0dc2a-102">Use esta interfaz principal sólo cuando el método que desea usar comparte el mismo nombre que un evento del objeto COM; en este caso, se convierte en esta interfaz para llamar al método y convierte en la interfaz de eventos más reciente para conectar con el evento.</span><span class="sxs-lookup"><span data-stu-id="0dc2a-102">Use this primary interface only when the method you want to use shares the same name as an event of the COM object; in this case, cast to this interface to call the method, and cast to the latest events interface to connect to the event.</span></span> <span data-ttu-id="0dc2a-103">De lo contrario, use la interfaz de .NET que se deriva de la coclase COM para tener acceso a los métodos, propiedades y eventos del objeto COM.</span><span class="sxs-lookup"><span data-stu-id="0dc2a-103">Otherwise, use the .NET interface that is derived from the COM coclass to access methods, properties, and events of the COM object.</span></span> <span data-ttu-id="0dc2a-104">Para obtener información sobre el objeto COM, consulte <see cref="T:Microsoft.Office.Interop.Outlook.FormRegion" />.</span><span class="sxs-lookup"><span data-stu-id="0dc2a-104">For information about the COM object, see <see cref="T:Microsoft.Office.Interop.Outlook.FormRegion" />.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Outlook.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._FormRegion.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Outlook::Application ^ Application { Microsoft::Office::Interop::Outlook::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(61440)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(61440)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0dc2a-105">Devuelve un <see cref="T:Microsoft.Office.Interop.Outlook.Application" /> object que representa la aplicación Outlook principal para el objeto.</span><span class="sxs-lookup"><span data-stu-id="0dc2a-105">Returns an <see cref="T:Microsoft.Office.Interop.Outlook.Application" />  object that represents the parent Outlook application for the  object.</span></span> <span data-ttu-id="0dc2a-106">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="0dc2a-106">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Class">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.OlObjectClass Class { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Outlook.OlObjectClass Class" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._FormRegion.Class" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Class As OlObjectClass" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Outlook::OlObjectClass Class { Microsoft::Office::Interop::Outlook::OlObjectClass get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(61450)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(61450)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.OlObjectClass</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0dc2a-107">Devuelve un <see cref="T:Microsoft.Office.Interop.Outlook.OlObjectClass" /> constante que indica la clase del objeto.</span><span class="sxs-lookup"><span data-stu-id="0dc2a-107">Returns an <see cref="T:Microsoft.Office.Interop.Outlook.OlObjectClass" /> constant indicating the object's class.</span></span> <span data-ttu-id="0dc2a-108">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="0dc2a-108">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Detail">
      <MemberSignature Language="C#" Value="public string Detail { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Detail" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._FormRegion.Detail" />
      <MemberSignature Language="VB.NET" Value="Public Property Detail As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Detail { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64309)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(64309)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(64309)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0dc2a-109">Devuelve o establece una <b>cadena</b> (<b>cadena</b> en C#) que representa el texto que se muestra en tiempo de ejecución en el encabezado después del nombre para mostrar de un área de formulario adyacente.</span><span class="sxs-lookup"><span data-stu-id="0dc2a-109">Returns or sets a <b>String</b> (<b>string</b> in C#) representing the text displayed at runtime in the header after the display name of an adjoining form region.</span></span> <span data-ttu-id="0dc2a-110">Lectura y escritura.</span><span class="sxs-lookup"><span data-stu-id="0dc2a-110">Read/write.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="0dc2a-p105">Se muestra la propiedad <b>Detail</b> para sólo áreas de formulario adyacentes. Se omite para áreas de formulario independientes.</span><span class="sxs-lookup"><span data-stu-id="0dc2a-p105">The <b>Detail</b> property is displayed for adjoining form regions only. It is ignored for separate form regions.</span></span></para>
          <para><span data-ttu-id="0dc2a-p106">La propiedad <b>Detail</b> es opcional para un área de formulario adyacente.</span><span class="sxs-lookup"><span data-stu-id="0dc2a-p106">The <b>Detail</b> property is optional for an adjoining form region. </span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayName">
      <MemberSignature Language="C#" Value="public string DisplayName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DisplayName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._FormRegion.DisplayName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DisplayName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DisplayName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(12289)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(12289)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0dc2a-114">Devuelve una <b>cadena</b> (<b>cadena</b> en C#) que representa el nombre para mostrar del área de formulario.</span><span class="sxs-lookup"><span data-stu-id="0dc2a-114">Returns a <b>String</b> (<b>string</b> in C#) representing the display name of the form region.</span></span> <span data-ttu-id="0dc2a-115">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="0dc2a-115">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="0dc2a-116">El nombre para mostrar es opcional para un área de formulario.</span><span class="sxs-lookup"><span data-stu-id="0dc2a-116">The display name is optional for a form region.</span></span> <span data-ttu-id="0dc2a-117">Si ha definido un valor para el &lt;formRegionName&gt; etiqueta en el correspondiente formulario región archivo XML de manifiesto, este valor se asignará al valor de la propiedad <b>DisplayName</b> .</span><span class="sxs-lookup"><span data-stu-id="0dc2a-117">If you have defined a value for the &lt;formRegionName&gt; tag in the corresponding form region manifest XML file, this value will map to the value of the <b>DisplayName</b> property.</span></span> <span data-ttu-id="0dc2a-118">Para obtener más información sobre el esquema XML para las áreas de formulario, vea la referencia de esquema de XML de Microsoft Outlook 2010 en la <a href="http://msdn.microsoft.com/en-us/library/default.aspx">Biblioteca de MSDN</a></span><span class="sxs-lookup"><span data-stu-id="0dc2a-118">For more information on the XML schema for form regions, see the Microsoft Outlook 2010 XML Schema Reference in the <a href="http://msdn.microsoft.com/en-us/library/default.aspx">MSDN Library</a></span></span></para>
          <para><span data-ttu-id="0dc2a-119">El valor de la propiedad <b>DisplayName</b> se muestra en tiempo de ejecución en la ficha Mostrar de la cinta de opciones de Microsoft Office Fluent para un área de formulario independiente o en el encabezado de un área de formulario adyacente.</span><span class="sxs-lookup"><span data-stu-id="0dc2a-119">The value of the <b>DisplayName</b> property is displayed at runtime in the Show tab of the Microsoft Office Fluent ribbon for a separate form region, or in the header of an adjoining form region.</span></span>  <span data-ttu-id="0dc2a-120">Se utiliza para la configuración regional predeterminada y pueden ser anulada por el &lt;stringOverride&gt; etiqueta en el archivo XML de manifiesto correspondiente al área de formulario.</span><span class="sxs-lookup"><span data-stu-id="0dc2a-120">It is used for the default locale, and can be overridden by the &lt;stringOverride&gt; tag in the corresponding form region manifest XML file.</span></span> <span data-ttu-id="0dc2a-121">La cadena que distingue mayúsculas de minúsculas, y su longitud máxima es de 256 caracteres.</span><span class="sxs-lookup"><span data-stu-id="0dc2a-121">The string is case-insensitive, and its maximum length is 256 characters.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableAutoLayout">
      <MemberSignature Language="C#" Value="public bool EnableAutoLayout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableAutoLayout" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._FormRegion.EnableAutoLayout" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableAutoLayout As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableAutoLayout { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64538)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(64538)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(64538)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0dc2a-122">Devuelve o establece un <b>valor Boolean</b> (<b>bool</b> en C#) que especifica si se usa la característica de cambio de tamaño al diseñar áreas de formulario en el Diseñador de formularios de diseño automático.</span><span class="sxs-lookup"><span data-stu-id="0dc2a-122">Returns or sets a <b>Boolean</b> (<b>bool</b> in C#) that specifies whether to use the automatic layout resizing feature when designing form regions in the forms designer.</span></span> <span data-ttu-id="0dc2a-123">Es de lectura y escritura.</span><span class="sxs-lookup"><span data-stu-id="0dc2a-123">Read/write</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="0dc2a-p111">La característica de cambio de tamaño del diseño automático del diseñador de formularios recalcula el diseño del formulario de forma dinámica a medida que cambia el tamaño del formulario. Solo está disponible para áreas del formulario del diseñador de formularios.</span><span class="sxs-lookup"><span data-stu-id="0dc2a-p111">The automatic layout resizing feature in the forms designer recalculates the form layout dynamically as the form is resized. This feature is only available to form regions in the forms designer.</span></span></para>
          <para><span data-ttu-id="0dc2a-126">Cuando esta propiedad es <b>True</b>, el Diseñador de formularios realiza el cambio de tamaño de diseño automático.</span><span class="sxs-lookup"><span data-stu-id="0dc2a-126">When this property is <b>True</b>, the forms designer performs automatic layout resizing.</span></span>  <span data-ttu-id="0dc2a-127">Cuando esta propiedad es <b>False</b>, el Diseñador de formularios no realiza el cambio de tamaño de diseño automático.</span><span class="sxs-lookup"><span data-stu-id="0dc2a-127">When this property is <b>False</b>, the forms designer does not perform automatic layout resizing.</span></span>  <span data-ttu-id="0dc2a-128">El valor predeterminado es <b>True</b>.</span><span class="sxs-lookup"><span data-stu-id="0dc2a-128">The default value is <b>True</b>.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Form">
      <MemberSignature Language="C#" Value="public object Form { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Form" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._FormRegion.Form" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Form As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Form { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64313)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(64313)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0dc2a-p113">Devuelve un <b>objeto</b> Object que representa el objeto <b>MSForms.UserForm</b>. Es de sólo lectura.</span><span class="sxs-lookup"><span data-stu-id="0dc2a-p113">Returns an <b>Object</b> representing the <b>MSForms.UserForm</b> object. Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FormRegionMode">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.OlFormRegionMode FormRegionMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Outlook.OlFormRegionMode FormRegionMode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._FormRegion.FormRegionMode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FormRegionMode As OlFormRegionMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Outlook::OlFormRegionMode FormRegionMode { Microsoft::Office::Interop::Outlook::OlFormRegionMode get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64308)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(64308)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.OlFormRegionMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0dc2a-p114">Devuelve una constante <b>OlFormRegionMode</b> que indica si el área de formulario está en una página de lectura, página de redacción o el panel de lectura. Es de sólo lectura.</span><span class="sxs-lookup"><span data-stu-id="0dc2a-p114">Returns an <b>OlFormRegionMode</b> constant that indicates whether the form region is in a read page, compose page, or Reading Pane. Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="0dc2a-133">Si el usuario tiene un elemento de correo en el panel de lectura, puede usar el <see cref="P:Microsoft.Office.Interop.Outlook._MailItem.Sent" /> (propiedad) para determinar si el usuario se encuentra en el modo de edición o el modo de lectura del panel de lectura.</span><span class="sxs-lookup"><span data-stu-id="0dc2a-133">If the user has a mail item in the Reading Pane, you can use the <see cref="P:Microsoft.Office.Interop.Outlook._MailItem.Sent" /> property to further determine if the user is in the edit mode or the read mode of the Reading Pane.</span></span> <span data-ttu-id="0dc2a-134">Los elementos de correo se muestran de forma distinta en el Panel de lectura si se encuentran en el modo de edición (cuando el elemento de correo está en la carpeta Borrador) que si se encuentran en el modo de lectura (cuando el elemento de correo está en la carpeta Bandeja de entrada o Enviado).</span><span class="sxs-lookup"><span data-stu-id="0dc2a-134">A mail item is displayed differently in the Reading Pane if it is in the edit mode (the mail item is in the Draft folder) than if it is in the read mode (the mail item is in the Inbox or Sent folder).</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Inspector">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.Inspector Inspector { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Outlook.Inspector Inspector" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._FormRegion.Inspector" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Inspector As Inspector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Outlook::Inspector ^ Inspector { Microsoft::Office::Interop::Outlook::Inspector ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(61502)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(61502)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.Inspector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0dc2a-135">Devuelve un <see cref="T:Microsoft.Office.Interop.Outlook.Inspector" /> objeto que representa el Inspector que contiene el área de formulario.</span><span class="sxs-lookup"><span data-stu-id="0dc2a-135">Returns an <see cref="T:Microsoft.Office.Interop.Outlook.Inspector" /> object representing the Inspector that hosts the form region.</span></span> <span data-ttu-id="0dc2a-136">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="0dc2a-136">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="0dc2a-137">Devuelve <b>Nothing</b> (una referencia nula (Nothing en Visual Basic) en C#) si el área de formulario se muestra en el panel de lectura.</span><span class="sxs-lookup"><span data-stu-id="0dc2a-137">Returns <b>Nothing</b> (a null reference (Nothing in Visual Basic) in C#) if the form region is displayed in the Reading Pane.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="InternalName">
      <MemberSignature Language="C#" Value="public string InternalName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InternalName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._FormRegion.InternalName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InternalName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ InternalName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(8450)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(8450)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0dc2a-138">Devuelve una <b>cadena</b> (<b>cadena</b> en C#) que representa el nombre de programación interno del área de formulario tal como se define en el manifiesto para el área de formulario.</span><span class="sxs-lookup"><span data-stu-id="0dc2a-138">Returns a <b>String</b> (<b>string</b> in C#) that represents the internal programmatic name of the form region as defined in the manifest for the form region.</span></span> <span data-ttu-id="0dc2a-139">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="0dc2a-139">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="0dc2a-140">El nombre interno es necesario para un área de formulario.</span><span class="sxs-lookup"><span data-stu-id="0dc2a-140">The internal name is required for a form region.</span></span> <span data-ttu-id="0dc2a-141">El &lt;nombre&gt; etiqueta en el archivo XML de manifiesto correspondiente al área de formulario que se asigna al valor de la propiedad <b>InternalName</b> .</span><span class="sxs-lookup"><span data-stu-id="0dc2a-141">The &lt;name&gt; tag in the corresponding form region manifest XML file maps to the value of the <b>InternalName</b> property.</span></span> <span data-ttu-id="0dc2a-142">Para obtener más información sobre el esquema XML para las áreas de formulario, vea la referencia de esquema de XML de Microsoft Outlook 2010 en la <a href="http://msdn.microsoft.com/en-us/library/default.aspx">Biblioteca de MSDN</a></span><span class="sxs-lookup"><span data-stu-id="0dc2a-142">For more information on the XML schema for form regions, see the Microsoft Outlook 2010 XML Schema Reference in the <a href="http://msdn.microsoft.com/en-us/library/default.aspx">MSDN Library</a></span></span></para>
          <para><span data-ttu-id="0dc2a-p119">El valor de la propiedad <b>InternalName</b> se utiliza el complemento o Microsoft Outlook para hacer referencia al área de formulario, por ejemplo. La propiedad <b>InternalName</b> admite sólo caracteres ASCII. La cadena que distingue mayúsculas de minúsculas, y su longitud máxima es de 256 caracteres.</span><span class="sxs-lookup"><span data-stu-id="0dc2a-p119">The value of the <b>InternalName</b> property is used by the add-in or Microsoft Outlook to refer to the form region, for example, to determine which form region is being loaded or to load strings from the localized string resources. The <b>InternalName</b> property supports only ASCII characters. The string is case-insensitive, and its maximum length is 256 characters.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="IsExpanded">
      <MemberSignature Language="C#" Value="public bool IsExpanded { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsExpanded" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._FormRegion.IsExpanded" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsExpanded As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsExpanded { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64312)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(64312)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0dc2a-146">Devuelve un <b>valor Boolean</b> (<b>bool</b> en C#) que indica si el área de formulario se expande.</span><span class="sxs-lookup"><span data-stu-id="0dc2a-146">Returns a <b>Boolean</b> (<b>bool</b> in C#) that indicates if the form region is expanded.</span></span> <span data-ttu-id="0dc2a-147">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="0dc2a-147">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="0dc2a-148">Esta propiedad únicamente se aplica a las áreas de formulario adyacentes y no se tiene en cuenta para las áreas de formulario independientes.</span><span class="sxs-lookup"><span data-stu-id="0dc2a-148">This property applies to adjoining form regions only and is ignored for separate form regions.</span></span></para>
          <para><span data-ttu-id="0dc2a-149">Outlook siempre primero carga un área de formulario en un estado expandido y <b>IsExpanded</b> establece en <b>True</b>.</span><span class="sxs-lookup"><span data-stu-id="0dc2a-149">Outlook always first loads a form region in an expanded state and sets <b>IsExpanded</b> to <b>True</b>.</span></span> <span data-ttu-id="0dc2a-150">Si es el estado inicial del área de formulario que se contraigan, Outlook cierra inmediatamente en el área de formulario, se activa la <see cref="E:Microsoft.Office.Interop.Outlook.FormRegionEvents_Event.Expanded" /> evento con el <paramref name="Expand" /> parámetro que se va a <b>False</b>y conjuntos de <b>IsExpanded</b> en <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="0dc2a-150">If the initial state of the form region is to be collapsed, then Outlook immediately closes the form region, fires the <see cref="E:Microsoft.Office.Interop.Outlook.FormRegionEvents_Event.Expanded" /> event with the <paramref name="Expand" /> parameter being <b>False</b>, and sets  <b>IsExpanded</b> to <b>False</b>.</span></span> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object Item { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._FormRegion.Item" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Item { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64096)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(64096)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0dc2a-p122">Devuelve un <b>objeto</b> que corresponde al elemento de Outlook enlazado al área de formulario. Es de sólo lectura.</span><span class="sxs-lookup"><span data-stu-id="0dc2a-p122">Returns an <b>Object</b> corresponding to the Outlook item bound to the form region. Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Language">
      <MemberSignature Language="C#" Value="public int Language { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Language" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._FormRegion.Language" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Language As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Language { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64065)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(64065)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0dc2a-153">Devuelve un valor <b>entero</b> (<b>int</b> en C#) que indica el LCID del idioma actual.</span><span class="sxs-lookup"><span data-stu-id="0dc2a-153">Returns an <b>Integer</b> (<b>int</b> in C#) value that indicates the LCID for the current language.</span></span> <span data-ttu-id="0dc2a-154">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="0dc2a-154">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._FormRegion.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(61441)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(61441)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0dc2a-p124">Devuelve al <b>objeto</b> del área de formulario primario. Es de sólo lectura.</span><span class="sxs-lookup"><span data-stu-id="0dc2a-p124">Returns the parent <b>Object</b> of the form region. Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reflow">
      <MemberSignature Language="C#" Value="public void Reflow ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reflow() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook._FormRegion.Reflow" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reflow ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reflow();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64315)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0dc2a-157">Hace que Outlook recalcule el alto de un área de formulario anexa para que se muestren todos los controles visibles del área de formulario.</span><span class="sxs-lookup"><span data-stu-id="0dc2a-157">Causes Outlook to recalculate the height of an adjoining form region to display all  the visible controls in the form region.</span></span></summary>
        <remarks><para><span data-ttu-id="0dc2a-p125">El método <b>Reflow</b> sólo se aplica a áreas de formulario adyacentes. Se realiza ninguna acción para áreas de formulario independientes.</span><span class="sxs-lookup"><span data-stu-id="0dc2a-p125">The <b>Reflow</b> method only applies to adjoining form regions. No action occurs for separate form regions.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public void Select ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook._FormRegion.Select" />
      <MemberSignature Language="VB.NET" Value="Public Sub Select ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Select();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(8457)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0dc2a-160">Hace que el área de formulario sea el área de formulario activa y quede visible.</span><span class="sxs-lookup"><span data-stu-id="0dc2a-160">Makes the form region the active form region such that it becomes visible.</span></span></summary>
        <remarks><para><span data-ttu-id="0dc2a-p126">Si el área de formulario es un área de formulario adyacente, después, <b>Seleccione</b> se expandirá el área de formulario (si no está ya expandido) y establecer el foco en el primer control de esa página. Si el área de formulario es un área de formulario independiente y ya no es la página activa, a continuación, <b>Seleccione</b> pasará al área de formulario de página y establecer el foco en el primer control de esa página. Si el área de formulario es un área de formulario independiente y ya es la página activa, no ocurre nada.</span><span class="sxs-lookup"><span data-stu-id="0dc2a-p126">If the form region is an adjoining form region, then <b>Select</b> will expand the form region (if it is not already expanded) and set focus on the first control on that page. If the form region is a separate form region and is not already the active page, then <b>Select</b> will swtich to the form region page and set focus on the first control on that page. If the form region is a separate form region and is already the active page, then nothing happens.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Session">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.NameSpace Session { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Outlook.NameSpace Session" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._FormRegion.Session" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Session As NameSpace" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Outlook::NameSpace ^ Session { Microsoft::Office::Interop::Outlook::NameSpace ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(61451)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(61451)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.NameSpace</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0dc2a-164">Devuelve el <see cref="T:Microsoft.Office.Interop.Outlook.NameSpace" /> objeto para la sesión actual.</span><span class="sxs-lookup"><span data-stu-id="0dc2a-164">Returns the <see cref="T:Microsoft.Office.Interop.Outlook.NameSpace" />  object for the current session.</span></span> <span data-ttu-id="0dc2a-165">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="0dc2a-165">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="0dc2a-166">La propiedad <b>Session</b> y el <see cref="M:Microsoft.Office.Interop.Outlook._Application.GetNamespace(System.String)" /> método puede usarse indistintamente para obtener el objeto <b>NameSpace</b> de la sesión actual.</span><span class="sxs-lookup"><span data-stu-id="0dc2a-166">The <b>Session</b> property and the <see cref="M:Microsoft.Office.Interop.Outlook._Application.GetNamespace(System.String)" /> method can be used interchangeably to obtain the <b>NameSpace</b> object for the current session.</span></span> <span data-ttu-id="0dc2a-167">Los dos miembros tienen el mismo propósito.</span><span class="sxs-lookup"><span data-stu-id="0dc2a-167">Both members serve the same purpose.</span></span> <span data-ttu-id="0dc2a-168">Por ejemplo, los siguientes pares de instrucciones realizan la misma función:</span><span class="sxs-lookup"><span data-stu-id="0dc2a-168">For example, the following pairs of statements perform the same function:</span></span></para>
          <code>Dim objNamespace As Outlook.NameSpace = _
    Application.GetNamespace("MAPI")</code>
          <code>Dim objSession As Outlook.NameSpace = Application.Session</code>
          <code>Outlook.NameSpace objNamespace = 
    Application.GetNamespace("MAPI");</code>
          <code>Outlook.NameSpace objSession = Application.Session;</code>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SetControlItemProperty">
      <MemberSignature Language="C#" Value="public void SetControlItemProperty (object Control, string PropertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetControlItemProperty([in]object Control, [in]string PropertyName) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook._FormRegion.SetControlItemProperty(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetControlItemProperty (Control As Object, PropertyName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetControlItemProperty(System::Object ^ Control, System::String ^ PropertyName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64201)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Control" Type="System.Object" />
        <Parameter Name="PropertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Control"><span data-ttu-id="0dc2a-169">Un control en el área de formulario a la que la propiedad especificada por <paramref name="PropertyName" /> se va a enlazar.</span><span class="sxs-lookup"><span data-stu-id="0dc2a-169">A control in the form region to which the property specified by <paramref name="PropertyName" /> will be bound.</span></span></param>
        <param name="PropertyName"><span data-ttu-id="0dc2a-170">Nombre de la propiedad que se va a enlazar al control.</span><span class="sxs-lookup"><span data-stu-id="0dc2a-170">The name of the property that will be bound to the control.</span></span></param>
        <summary><span data-ttu-id="0dc2a-171">Enlaza una propiedad explícita integrada o una propiedad personalizada a un control del área de formulario.</span><span class="sxs-lookup"><span data-stu-id="0dc2a-171">Binds an explicit  built-in property or a custom property to a control in the form region.</span></span></summary>
        <remarks><para><span data-ttu-id="0dc2a-p129">Puede usar este método para enlazar una propiedad explícita integrada o una propiedad personalizada a un control. Debe hacer referencia a la propiedad por su nombre de cadena, por ejemplo, <b>Subject</b> y no por espacio de nombres, por ejemplo, http://schemas.microsoft.com/mapi/proptag/0x0037001E.</span><span class="sxs-lookup"><span data-stu-id="0dc2a-p129">You can use this method to bind an explicit built-in property or a custom property to a control. You must reference the property by its string name, for example, <b>Subject</b>, and not by namespace, for example, http://schemas.microsoft.com/mapi/proptag/0x0037001E.</span></span></para>
          <para><span data-ttu-id="0dc2a-174">El <paramref name="PropertyName" /> parámetro no distingue mayúsculas de minúsculas.</span><span class="sxs-lookup"><span data-stu-id="0dc2a-174">The <paramref name="PropertyName" /> parameter is not case-sensitive.</span></span> <span data-ttu-id="0dc2a-175">Por ejemplo, <b>SetControlItemProperty</b> interpreta un argumento, <b>CustomerId</b>a ser la misma que <b>CustomerID</b> y enlaza el control especificado a la integrada <see cref="P:Microsoft.Office.Interop.Outlook._ContactItem.CustomerID" /> (propiedad).</span><span class="sxs-lookup"><span data-stu-id="0dc2a-175">For example, <b>SetControlItemProperty</b> interprets an argument, <b>CustomerId</b>, to be the same as <b>CustomerID</b> and binds the specified control to the built-in <see cref="P:Microsoft.Office.Interop.Outlook._ContactItem.CustomerID" /> property.</span></span></para>
          <para><span data-ttu-id="0dc2a-176">Aparte de utilizar el método <b>SetControlItemProperty</b> de un <see cref="T:Microsoft.Office.Interop.Outlook.FormRegion" /> de objetos, también puede utilizar código similar al siguiente para enlazar una propiedad como la propiedad <b>Subject</b> a un control:</span><span class="sxs-lookup"><span data-stu-id="0dc2a-176">Other than using the <b>SetControlItemProperty</b> method of a <see cref="T:Microsoft.Office.Interop.Outlook.FormRegion" /> object, you can also use code similar to the following to bind a property such as the  <b>Subject</b> property to a control:</span></span></para>
          <code>myPage.Controls("bar").ItemProperty = "subject"</code>
          <code>myPage.Controls("bar").ItemProperty = "subject";</code>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SuppressControlReplacement">
      <MemberSignature Language="C#" Value="public bool SuppressControlReplacement { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SuppressControlReplacement" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._FormRegion.SuppressControlReplacement" />
      <MemberSignature Language="VB.NET" Value="Public Property SuppressControlReplacement As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SuppressControlReplacement { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64518)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(64518)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(64518)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0dc2a-177">Devuelve o establece un <b>valor Boolean</b> (<b>bool</b> en C#) que impide que Outlook reemplace automáticamente un control de Forms 2.0 por un control de Outlook con temas en tiempo de ejecución y tiempo de diseño.</span><span class="sxs-lookup"><span data-stu-id="0dc2a-177">Returns or sets a <b>Boolean</b> (<b>bool</b> in C#) that disables Outlook from automatically replacing  a Forms 2.0 control by  a themed Outlook control at design time and runtime.</span></span> <span data-ttu-id="0dc2a-178">Lectura y escritura.</span><span class="sxs-lookup"><span data-stu-id="0dc2a-178">Read/write.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="0dc2a-179">Para obtener más información sobre cómo Outlook reemplaza automáticamente un control de Forms 2.0 por un control homólogo de Outlook con temas, vea <a href="http://go.microsoft.com/fwlink/?LinkId=87823">controles en un formulario personalizado</a></span><span class="sxs-lookup"><span data-stu-id="0dc2a-179">For more information on Outlook automatically replacing a Forms 2.0 control by  a themed Outlook counterpart control, see <a href="http://go.microsoft.com/fwlink/?LinkId=87823">Controls in a Custom Form</a></span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public bool Visible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Visible" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._FormRegion.Visible" />
      <MemberSignature Language="VB.NET" Value="Public Property Visible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Visible { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(8451)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(8451)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(8451)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0dc2a-180">Devuelve o establece un <see cref="T:System.Boolean" /> (<b>bool</b> para C#) valor que indica si el área de formulario es visible o está oculto.</span><span class="sxs-lookup"><span data-stu-id="0dc2a-180">Returns or sets a <see cref="T:System.Boolean" /> (<b>bool</b> for C#) value that indicates whether the form region is visible or hidden.</span></span> <span data-ttu-id="0dc2a-181">Lectura y escritura.</span><span class="sxs-lookup"><span data-stu-id="0dc2a-181">Read/write.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="0dc2a-p133">
            <b>True</b> si el área de formulario está visible; <b>False</b> si está oculto. El valor predeterminado es <b>True</b>.</span><span class="sxs-lookup"><span data-stu-id="0dc2a-p133">
            <b>True</b> if the form region is visible; <b>False</b> if it is hidden. The default is <b>True</b>. </span></span></para>
          <para><span data-ttu-id="0dc2a-184">Utilice la propiedad <b>Visible</b> para controlar el acceso a la información sin mostrarla en un área de formulario.</span><span class="sxs-lookup"><span data-stu-id="0dc2a-184">Use the <b>Visible</b> property to control access to information without displaying it in a form region.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
  </Members>
</Type>
