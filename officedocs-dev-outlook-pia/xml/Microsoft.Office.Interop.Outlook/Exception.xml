<Type Name="Exception" FullName="Microsoft.Office.Interop.Outlook.Exception">
  <Metadata><Meta Name="ms.openlocfilehash" Value="47943f3ce7b614b555767c32ad8d514efe3bf2b1" /><Meta Name="ms.sourcegitcommit" Value="372abf58b21f4fab503d106f0e8c8a2ac45f9332" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="01/12/2019" /><Meta Name="ms.locfileid" Value="27899988" /></Metadata><TypeSignature Language="C#" Value="public interface Exception" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract Exception" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Outlook.Exception" />
  <TypeSignature Language="VB.NET" Value="Public Interface Exception" />
  <TypeSignature Language="C++ CLI" Value="public interface class Exception" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("0006304D-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4160)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="246d1-101">Representa información sobre una instancia de un <see cref="T:Microsoft.Office.Interop.Outlook.AppointmentItem" /> objeto que es una excepción a una serie periódica.</span><span class="sxs-lookup"><span data-stu-id="246d1-101">Represents information about one instance of an <see cref="T:Microsoft.Office.Interop.Outlook.AppointmentItem" />  object which is an exception to a recurring series.</span></span></summary>
    <remarks><para> <span data-ttu-id="246d1-102">A diferencia de los demás objetos de Microsoft Outlook, el objeto <b>Exception</b> es un objeto de sólo lectura.</span><span class="sxs-lookup"><span data-stu-id="246d1-102">Unlike most of the other Microsoft Outlook objects, the <b>Exception</b> object is a read-only object.</span></span> <span data-ttu-id="246d1-103">Esto significa que no se puede crear un objeto de <b>excepción</b> pero, en su lugar, el objeto se crea cuando se altera una propiedad de un <b>objeto AppointmentItem</b>.</span><span class="sxs-lookup"><span data-stu-id="246d1-103">This means that you cannot create an <b>Exception</b> object but, rather, the object is created when a property of an <b>AppointmentItem</b> is altered.</span></span> <span data-ttu-id="246d1-104">Por ejemplo, si cambia el <see cref="P:Microsoft.Office.Interop.Outlook._AppointmentItem.Start" /> (propiedad) de un <b>objeto AppointmentItem</b>, habrá creado una <b>excepción</b> en <b>AppointmentItem.RecurrencePattern.Exceptions</b>.</span><span class="sxs-lookup"><span data-stu-id="246d1-104">For example, if you change the <see cref="P:Microsoft.Office.Interop.Outlook._AppointmentItem.Start" />  property of one <b>AppointmentItem</b>, you have created an <b>Exception</b> in <b>AppointmentItem.RecurrencePattern.Exceptions</b>.</span></span></para>
      <para><span data-ttu-id="246d1-105">
        <b>Nota</b>: el <see cref="T:Microsoft.Office.Interop.Outlook.Exceptions" /> objeto se encuentra en la <see cref="T:Microsoft.Office.Interop.Outlook.RecurrencePattern" /> , no el propio objeto <b>AppointmentItem</b> .</span><span class="sxs-lookup"><span data-stu-id="246d1-105">
        <b>Note</b>: The <see cref="T:Microsoft.Office.Interop.Outlook.Exceptions" />  object is on the <see cref="T:Microsoft.Office.Interop.Outlook.RecurrencePattern" /> , not the <b>AppointmentItem</b> object itself.</span></span></para>
      <para><span data-ttu-id="246d1-106">Cuando se trabaja con elementos de citas periódicas, debe liberar todas las referencias anteriores, obtener nuevas referencias al elemento de cita periódico antes de tener acceso o modificar el elemento y liberar estas referencias, tan pronto como termine y haya guardado los cambios.</span><span class="sxs-lookup"><span data-stu-id="246d1-106">When you work with recurring appointment items, you should release any prior references, obtain new references to the recurring appointment item before you access or modify the item, and release these references as soon as you are finished and have saved the changes.</span></span> <span data-ttu-id="246d1-107">Esta práctica se aplica a la periódica <see cref="T:Microsoft.Office.Interop.Outlook.AppointmentItem" /> objeto y cualquier <see cref="T:Microsoft.Office.Interop.Outlook.Exception" /> o <see cref="T:Microsoft.Office.Interop.Outlook.RecurrencePattern" /> objeto.</span><span class="sxs-lookup"><span data-stu-id="246d1-107">This practice applies to the recurring <see cref="T:Microsoft.Office.Interop.Outlook.AppointmentItem" /> object, and any <see cref="T:Microsoft.Office.Interop.Outlook.Exception" /> or <see cref="T:Microsoft.Office.Interop.Outlook.RecurrencePattern" /> object.</span></span> <span data-ttu-id="246d1-108">Para liberar una referencia en Visual Basic, establezca ese objeto existente en <b>Nothing</b>.</span><span class="sxs-lookup"><span data-stu-id="246d1-108">To release a reference in Visual Basic, set that existing object to <b>Nothing</b>.</span></span> <span data-ttu-id="246d1-109">En C#, libere explícitamente la memoria para ese objeto.</span><span class="sxs-lookup"><span data-stu-id="246d1-109">In C#, explicitly release the memory for that object.</span></span> </para>
      <para><span data-ttu-id="246d1-p103">Tenga en cuenta que incluso después de liberar la referencia e intentar obtener una nueva, si aún hay una referencia activa a uno de los objetos anteriores, mantenida por otro complemento o Outlook, la nueva referencia puede apuntar a una copia obsoleta del objeto. Por lo tanto, es importante liberar las referencias cuando termine con la cita periódica.</span><span class="sxs-lookup"><span data-stu-id="246d1-p103">Note that even after you release your reference and attempt to obtain a new reference, if there is still an active reference, held by another add-in or Outlook, to one of the above objects, your new reference will still point to an out-of-date copy of the object. Therefore, it is important that you release your references as soon as you are finished with the recurring appointment.</span></span></para>
      <para> </para></remarks>
  </Docs>
  <Members>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Outlook.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook.Exception.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Outlook::Application ^ Application { Microsoft::Office::Interop::Outlook::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(61440)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(61440)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="246d1-112">Devuelve un <see cref="T:Microsoft.Office.Interop.Outlook.Application" /> object que representa la aplicación Outlook principal para el objeto.</span><span class="sxs-lookup"><span data-stu-id="246d1-112">Returns an <see cref="T:Microsoft.Office.Interop.Outlook.Application" />  object that represents the parent Outlook application for the  object.</span></span> <span data-ttu-id="246d1-113">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="246d1-113">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppointmentItem">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.AppointmentItem AppointmentItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Outlook.AppointmentItem AppointmentItem" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook.Exception.AppointmentItem" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AppointmentItem As AppointmentItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Outlook::AppointmentItem ^ AppointmentItem { Microsoft::Office::Interop::Outlook::AppointmentItem ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(8193)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(8193)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.AppointmentItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="246d1-114">Devuelve el <see cref="T:Microsoft.Office.Interop.Outlook.AppointmentItem" /> objeto que es la excepción.</span><span class="sxs-lookup"><span data-stu-id="246d1-114">Returns the <see cref="T:Microsoft.Office.Interop.Outlook.AppointmentItem" />  object that is the exception.</span></span> <span data-ttu-id="246d1-115">No es válido para las citas eliminadas.</span><span class="sxs-lookup"><span data-stu-id="246d1-115">Not valid for deleted appointments.</span></span> <span data-ttu-id="246d1-116">Es de sólo lectura.</span><span class="sxs-lookup"><span data-stu-id="246d1-116">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="246d1-117">Cuando se trabaja con elementos de citas periódicas, debe liberar todas las referencias anteriores, obtener nuevas referencias al elemento de cita periódico antes de tener acceso o modificar el elemento y liberar estas referencias, tan pronto como termine y haya guardado los cambios.</span><span class="sxs-lookup"><span data-stu-id="246d1-117">When you work with recurring appointment items, you should release any prior references, obtain new references to the recurring appointment item before you access or modify the item, and release these references as soon as you are finished and have saved the changes.</span></span> <span data-ttu-id="246d1-118">Esta práctica se aplica a la periódica <see cref="T:Microsoft.Office.Interop.Outlook.AppointmentItem" /> objeto y cualquier <see cref="T:Microsoft.Office.Interop.Outlook.Exception" /> o <see cref="T:Microsoft.Office.Interop.Outlook.RecurrencePattern" /> objeto.</span><span class="sxs-lookup"><span data-stu-id="246d1-118">This practice applies to the recurring <see cref="T:Microsoft.Office.Interop.Outlook.AppointmentItem" /> object, and any <see cref="T:Microsoft.Office.Interop.Outlook.Exception" /> or <see cref="T:Microsoft.Office.Interop.Outlook.RecurrencePattern" /> object.</span></span> <span data-ttu-id="246d1-119">Para liberar una referencia en Visual Basic, establezca ese objeto existente en <b>Nothing</b>.</span><span class="sxs-lookup"><span data-stu-id="246d1-119">To release a reference in Visual Basic, set that existing object to <b>Nothing</b>.</span></span> <span data-ttu-id="246d1-120">En C#, libere explícitamente la memoria para ese objeto.</span><span class="sxs-lookup"><span data-stu-id="246d1-120">In C#, explicitly release the memory for that object.</span></span> </para>
          <para><span data-ttu-id="246d1-p107">Tenga en cuenta que incluso después de liberar la referencia e intentar obtener una nueva, si aún hay una referencia activa a uno de los objetos anteriores, mantenida por otro complemento o Outlook, la nueva referencia puede apuntar a una copia obsoleta del objeto. Por lo tanto, es importante liberar las referencias cuando termine con la cita periódica.</span><span class="sxs-lookup"><span data-stu-id="246d1-p107">Note that even after you release your reference and attempt to obtain a new reference, if there is still an active reference, held by another add-in or Outlook, to one of the above objects, your new reference will still point to an out-of-date copy of the object. Therefore, it is important that you release your references as soon as you are finished with the recurring appointment.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Class">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.OlObjectClass Class { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Outlook.OlObjectClass Class" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook.Exception.Class" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Class As OlObjectClass" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Outlook::OlObjectClass Class { Microsoft::Office::Interop::Outlook::OlObjectClass get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(61450)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(61450)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.OlObjectClass</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="246d1-123">Devuelve un <see cref="T:Microsoft.Office.Interop.Outlook.OlObjectClass" /> constante que indica la clase del objeto.</span><span class="sxs-lookup"><span data-stu-id="246d1-123">Returns an <see cref="T:Microsoft.Office.Interop.Outlook.OlObjectClass" /> constant indicating the object's class.</span></span> <span data-ttu-id="246d1-124">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="246d1-124">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Deleted">
      <MemberSignature Language="C#" Value="public bool Deleted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Deleted" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook.Exception.Deleted" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Deleted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Deleted { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(8194)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(8194)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="246d1-125">Devuelve un <b>valor Boolean</b> (<b>bool</b> en C#) que es <b>True</b> si la <see cref="T:Microsoft.Office.Interop.Outlook.AppointmentItem" /> se eliminó del patrón de frecuencia.</span><span class="sxs-lookup"><span data-stu-id="246d1-125">Returns <b>Boolean</b> (<b>bool</b> in C#) that is <b>True</b> if the <see cref="T:Microsoft.Office.Interop.Outlook.AppointmentItem" />  was deleted from the recurring pattern.</span></span> <span data-ttu-id="246d1-126">Solo lectura</span><span class="sxs-lookup"><span data-stu-id="246d1-126">Read-only</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemProperties">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.ItemProperties ItemProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Outlook.ItemProperties ItemProperties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook.Exception.ItemProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ItemProperties As ItemProperties" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Outlook::ItemProperties ^ ItemProperties { Microsoft::Office::Interop::Outlook::ItemProperties ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64009)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(64009)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.ItemProperties</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="246d1-127">[!PRECAUCIóN] Este objeto, miembro o enumeración está en desuso y no debería usarse en el código.</span><span class="sxs-lookup"><span data-stu-id="246d1-127">This object, member, or enumeration is deprecated and is not intended to be used in your code.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OriginalDate">
      <MemberSignature Language="C#" Value="public DateTime OriginalDate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime OriginalDate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook.Exception.OriginalDate" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OriginalDate As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime OriginalDate { DateTime get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(8192)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(8192)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="246d1-128">Devuelve un <b>DateTime</b> que indica la fecha y hora originales de un <see cref="T:Microsoft.Office.Interop.Outlook.AppointmentItem" /> antes de que se altere.</span><span class="sxs-lookup"><span data-stu-id="246d1-128">Returns a <b>DateTime</b> indicating the original date and time of an <see cref="T:Microsoft.Office.Interop.Outlook.AppointmentItem" />  before it was altered.</span></span> <span data-ttu-id="246d1-129">Esta propiedad devolverá la fecha original incluso si se ha eliminado el <b>objeto AppointmentItem</b>.</span><span class="sxs-lookup"><span data-stu-id="246d1-129">This property will return the original date even if the <b>AppointmentItem</b> has been deleted.</span></span> <span data-ttu-id="246d1-130">Sin embargo, no devolverá la hora original si se ha eliminado.</span><span class="sxs-lookup"><span data-stu-id="246d1-130">However, it will not return the original time if deletion has occurred.</span></span> <span data-ttu-id="246d1-131">Es de sólo lectura.</span><span class="sxs-lookup"><span data-stu-id="246d1-131">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook.Exception.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(61441)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(61441)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="246d1-p111">Devuelve al elemento primario del <b>objeto</b> del objeto especificado. Es de sólo lectura.</span><span class="sxs-lookup"><span data-stu-id="246d1-p111">Returns the parent <b>Object</b> of the specified object. Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Session">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.NameSpace Session { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Outlook.NameSpace Session" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook.Exception.Session" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Session As NameSpace" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Outlook::NameSpace ^ Session { Microsoft::Office::Interop::Outlook::NameSpace ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(61451)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(61451)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.NameSpace</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="246d1-134">Devuelve el <see cref="T:Microsoft.Office.Interop.Outlook.NameSpace" /> objeto para la sesión actual.</span><span class="sxs-lookup"><span data-stu-id="246d1-134">Returns the <see cref="T:Microsoft.Office.Interop.Outlook.NameSpace" />  object for the current session.</span></span> <span data-ttu-id="246d1-135">Solo lectura.</span><span class="sxs-lookup"><span data-stu-id="246d1-135">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="246d1-136">La propiedad <b>Session</b> y el <see cref="M:Microsoft.Office.Interop.Outlook._Application.GetNamespace(System.String)" /> método puede usarse indistintamente para obtener el objeto <b>NameSpace</b> de la sesión actual.</span><span class="sxs-lookup"><span data-stu-id="246d1-136">The <b>Session</b> property and the <see cref="M:Microsoft.Office.Interop.Outlook._Application.GetNamespace(System.String)" /> method can be used interchangeably to obtain the <b>NameSpace</b> object for the current session.</span></span> <span data-ttu-id="246d1-137">Los dos miembros tienen el mismo propósito.</span><span class="sxs-lookup"><span data-stu-id="246d1-137">Both members serve the same purpose.</span></span> <span data-ttu-id="246d1-138">Por ejemplo, los siguientes pares de instrucciones realizan la misma función:</span><span class="sxs-lookup"><span data-stu-id="246d1-138">For example, the following pairs of statements perform the same function:</span></span></para>
          <code>Dim objNamespace As Outlook.NameSpace = _
    Application.GetNamespace("MAPI")</code>
          <code>Dim objSession As Outlook.NameSpace = Application.Session</code>
          <code>Outlook.NameSpace objNamespace = 
    Application.GetNamespace("MAPI");</code>
          <code>Outlook.NameSpace objSession = Application.Session;</code>
          <para> </para></remarks>
      </Docs>
    </Member>
  </Members>
</Type>