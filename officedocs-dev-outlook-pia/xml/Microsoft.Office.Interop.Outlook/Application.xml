<Type Name="Application" FullName="Microsoft.Office.Interop.Outlook.Application">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="da09d35d132ed58e324bfd41c114fa38d39760a8" />
    <Meta Name="ms.sourcegitcommit" Value="372abf58b21f4fab503d106f0e8c8a2ac45f9332" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="07/19/2018" />
    <Meta Name="ms.locfileid" Value="20642650" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface Application : Microsoft.Office.Interop.Outlook._Application, Microsoft.Office.Interop.Outlook.ApplicationEvents_11_Event" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract Application implements class Microsoft.Office.Interop.Outlook._Application, class Microsoft.Office.Interop.Outlook.ApplicationEvents_11_Event" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Outlook.Application" />
  <TypeSignature Language="VB.NET" Value="Public Interface Application&#xA;Implements _Application, ApplicationEvents_11_Event" />
  <TypeSignature Language="C++ CLI" Value="public interface class Application : Microsoft::Office::Interop::Outlook::_Application, Microsoft::Office::Interop::Outlook::ApplicationEvents_11_Event" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Office.Interop.Outlook._Application</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Office.Interop.Outlook.ApplicationEvents_11_Event</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.CoClass(typeof(Microsoft.Office.Interop.Outlook.ApplicationClass))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("00063001-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="74537-101">Representa la aplicación completa de Outlook.</span>
      <span class="sxs-lookup">
        <span data-stu-id="74537-101">Represents the entire Outlook application.</span>
      </span>
    </summary>
    <remarks>
      <span data-ttu-id="74537-102">
        <para>Ésta es una interfaz de .NET que se deriva de una coclase COM que requiere código administrado para la interoperabilidad con el objeto COM correspondiente. Use esta interfaz derivada para tener acceso a todos los miembros de método, evento y propiedad del objeto COM. Sin embargo, si un método o evento que va a usar comparte el mismo nombre en el mismo objeto COM, se convierte en la interfaz primaria correspondiente para llamar al método y convierte en la interfaz de eventos más reciente para conectar con el evento. Hacer referencia a este tema para obtener información sobre el objeto COM. Para obtener información acerca de los miembros de métodos y propiedades del objeto COM, consulte <see cref="T:Microsoft.Office.Interop.Outlook._Application" />. Para obtener información acerca de los miembros de evento del objeto COM, consulte <see cref="T:Microsoft.Office.Interop.Outlook.ApplicationEvents_11_Event" />.</para>
        <para>Éste es el único objeto de la jerarquía que se puede devolver mediante el uso de la <see cref="M:Microsoft.Office.Interop.Outlook._Application.CreateObject(System.String)" /> método o la función intrínseca de Visual Basic <b>GetObject</b> .</para>
        <para>Objeto de <b>aplicación</b> de Outlook tiene varios propósitos:</para>
        <list type="bullet">
          <item>
            <para>Como el objeto raíz, permite el acceso a otros objetos en la jerarquía de Outlook.</para>
          </item>
          <item>
            <para>Permite el acceso directo a un nuevo elemento creado mediante el uso de <see cref="M:Microsoft.Office.Interop.Outlook._Application.CreateItem(Microsoft.Office.Interop.Outlook.OlItemType)" />, sin necesidad de recorrer la jerarquía de objetos.</para>
          </item>
          <item>
            <para>Permite el acceso a los objetos de la interfaz activa (el explorador y el inspector).</para>
          </item>
        </list>
        <para>Cuando utilice Automatización para controlar Microsoft Outlook desde otra aplicación, use el método <b>CreateObject</b> para crear un objeto <b>Application</b> de Outlook.</para>
        <para />
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="74537-102">
          <para>This is a .NET interface derived from a COM coclass that is required by managed code for interoperability with the corresponding COM object. Use this derived interface to access all method, property, and event members of the COM object. However, if a method or event you want to use shares the same name under the same COM object, cast to the corresponding primary interface to call the method, and cast to the latest events interface to connect to the event. Refer to this topic for information about the COM object. For information about the method and property members of the COM object, see <see cref="T:Microsoft.Office.Interop.Outlook._Application" />. For information about the event members of the COM object, see <see cref="T:Microsoft.Office.Interop.Outlook.ApplicationEvents_11_Event" />.</para>
          <para>This is the only object in the hierarchy that can be returned by using the <see cref="M:Microsoft.Office.Interop.Outlook._Application.CreateObject(System.String)" />  method or the intrinsic Visual Basic <b>GetObject</b> function.</para>
          <para>The Outlook <b>Application</b> object has several purposes:</para>
          <list type="bullet">
            <item>
              <para>As the root object, it allows access to other objects in the Outlook hierarchy.</para>
            </item>
            <item>
              <para>It allows direct access to a new item created by using <see cref="M:Microsoft.Office.Interop.Outlook._Application.CreateItem(Microsoft.Office.Interop.Outlook.OlItemType)" />, without having to traverse the object hierarchy.</para>
            </item>
            <item>
              <para>It allows access to the active interface objects (the explorer and the inspector).</para>
            </item>
          </list>
          <para>When you use Automation to control Microsoft Outlook from another application, you use the <b>CreateObject</b> method to create an Outlook <b>Application</b> object.</para>
          <para />
        </span>
      </span>
    </remarks>
  </Docs>
  <Members />
</Type>